{"version":3,"sources":["components/Bar.jsx","database/db.js","components/BarConfigurator.jsx","App.js","reportWebVitals.js","index.js"],"names":["Chart","register","annotationPlugin","VerticalBar","props","data","options","db","purchase","managerName","purchases","date","weight","product","price","yAxisID","lmeOfficial","lmeBidding","usdBidding","usdOfficial","lmeCalendar","work","trend","news","BarConfigurator","labels","item","push","annotations","i","length","newAnnotation","type","xScaleID","yScaleID","yMin","yMax","xMin","xMax","borderWidth","borderColor","backgroundColor","calculateAnnotations","datasets","label","order","x","y","r","scales","title","display","text","position","stacked","ticks","beginAtZero","min","max","y2","x1","plugins","annotation","filler","propagate","target","tooltip","callbacks","footer","tooltipItems","output","forEach","tooltipItem","dataset","raw","parsed","className","Bar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.191b6847.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Chart, Bar } from 'react-chartjs-2';\r\n// import * as ChartAnnotation from 'chartjs-plugin-annotation';\r\nimport annotationPlugin from 'chartjs-plugin-annotation';\r\n// import type * as ChartJs from 'chart.js';\r\n// import * as ChartJs from 'chart.js';\r\n// import annotationPlugin from 'chartjs-plugin-annotation';\r\nChart.register(annotationPlugin);\r\n\r\n\r\n\r\n// const data = {\r\n//   labels: ['01.10.21', '02.10.21', '03.10.21', '04.10.21', '05.10.21', '06.10.21'],\r\n//   datasets: [\r\n//     {\r\n//       label: '# of Votes',\r\n//       data: [12, 19, 3, 5, 2, 3],\r\n//       backgroundColor: [\r\n//         'rgba(255, 99, 132, 0.2)',\r\n//         'rgba(54, 162, 235, 0.2)',\r\n//         'rgba(255, 206, 86, 0.2)',\r\n//         'rgba(75, 192, 192, 0.2)',\r\n//         'rgba(153, 102, 255, 0.2)',\r\n//         'rgba(255, 159, 64, 0.2)',\r\n//       ],\r\n//       borderColor: [\r\n//         'rgba(255, 99, 132, 1)',\r\n//         'rgba(54, 162, 235, 1)',\r\n//         'rgba(255, 206, 86, 1)',\r\n//         'rgba(75, 192, 192, 1)',\r\n//         'rgba(153, 102, 255, 1)',\r\n//         'rgba(255, 159, 64, 1)',\r\n//       ],\r\n//       order: 2,\r\n//       yAxisID: 'y',\r\n//       borderWidth: 1,\r\n//       stack: 'Stack 0',\r\n//     },\r\n//     {\r\n//       label: '# of Votes2',\r\n//       data: [5, 11, 5, 7, 5, 4],\r\n//       backgroundColor: [\r\n//         'rgba(25, 99, 12, 0.2)',\r\n//         'rgba(5, 162, 25, 0.2)',\r\n//         'rgba(25, 206, 6, 0.2)',\r\n//         'rgba(7, 192, 12, 0.2)',\r\n//         'rgba(53, 102, 25, 0.2)',\r\n//         'rgba(25, 159, 6, 0.2)',\r\n//       ],\r\n//       borderColor: [\r\n//         'rgba(255, 99, 132, 1)',\r\n//         'rgba(54, 162, 235, 1)',\r\n//         'rgba(255, 206, 86, 1)',\r\n//         'rgba(75, 192, 192, 1)',\r\n//         'rgba(153, 102, 255, 1)',\r\n//         'rgba(255, 159, 64, 1)',\r\n//       ],\r\n//       order: 2,\r\n//       borderWidth: 1,\r\n//       yAxisID: 'y',\r\n//       stack: 'Stack 0',\r\n//     }, {\r\n//       label: 'Dataset 1',\r\n//       data: [1750, 1859, 1695, 1820, 1699, 1800],\r\n//       borderColor: 'red',\r\n//       backgroundColor: 'rgba(25, 15, 6, 0.3)',\r\n//       type: 'line',\r\n//       fill: '+1',\r\n//       order: 1,\r\n//       yAxisID: 'y2'\r\n//     }, {\r\n//       label: 'Dataset 2',\r\n//       data: [1700, 1800, 1650, 1790, 1650, 1720],\r\n//       backgroundColor: 'rgba(25, 155, 6, 0.3)',\r\n//       borderColor: 'red',\r\n//       type: 'line',\r\n//       order: 1,\r\n//       yAxisID: 'y2'\r\n//     }, {\r\n//       type: 'bubble',\r\n//       label: 'Dataset 3',\r\n//       test: \"testItem\",\r\n//       data: [{\r\n//         x: 1,\r\n//         y: 1700,\r\n//         r: 15\r\n//       },{\r\n//         x: 2,\r\n//         y: 1650,\r\n//         r: 15\r\n//       },{\r\n//         x: 3,\r\n//         y: 1700,\r\n//         r: 15\r\n//       },{\r\n//         x: 4,\r\n//         y: 1740,\r\n//         r: 15\r\n//       },{\r\n//         x: 5,\r\n//         y: 1650,\r\n//         r: 15\r\n//       },{\r\n//         x: 6,\r\n//         y: 1600,\r\n//         r: 15\r\n//       }],\r\n//       borderColor: 'green',\r\n//       backgroundColor: 'green',\r\n//       order: 0,\r\n//       yAxisID: 'y2'\r\n//     },\r\n//   ],\r\n// };\r\n\r\n// const options = {\r\n//   scales: {\r\n//     y: {\r\n//       title: {\r\n//         display: true,\r\n//         text: 'test'\r\n//       },\r\n//       stacked: true,\r\n//       ticks: {\r\n//         beginAtZero: true,\r\n//       },\r\n//       max: 50,\r\n//     },\r\n//     y2: {\r\n//       title: {\r\n//         display: true,\r\n//         text: 'LME'\r\n//       },\r\n//       stacked: false,\r\n//       ticks: {\r\n//         beginAtZero: false\r\n//       },\r\n//       min: 1400,\r\n//       max: 2100\r\n//     },\r\n//     y3: {\r\n//       title: {\r\n//         display: true,\r\n//         text: 'test3'\r\n//       },\r\n//       stacked: true,\r\n//       ticks: {\r\n//         beginAtZero: true,\r\n//       },\r\n//     },\r\n//     y4: {\r\n//       title: {\r\n//         display: true,\r\n//         text: 'test4'\r\n//       },\r\n//       stacked: true,\r\n//       ticks: {\r\n//         beginAtZero: true,\r\n//       },\r\n//     },\r\n//     x1: {\r\n//       title: {\r\n//         display: true,\r\n//         text: 'test4'\r\n//       },\r\n//     }\r\n//   },\r\n//   plugins: {\r\n//     annotation: {\r\n//       annotations: [\r\n//         {\r\n//           type: 'box',\r\n//           xScaleID: 'x1',\r\n//           yScaleID: 'y',\r\n//           xMin: 1,\r\n//           xMax: 3,\r\n//           yMin: 0,\r\n//           yMax: 40,\r\n//           backgroundColor: 'rgba(255, 99, 132, 0.25)'\r\n//         },\r\n//         {\r\n//           type: 'box',\r\n//           xScaleID: 'x1',\r\n//           yScaleID: 'y',\r\n//           xMin: 4,\r\n//           xMax: 4.5,\r\n//           yMin: 0,\r\n//           yMax: 40,\r\n//           backgroundColor: 'rgba(25, 99, 13, 0.25)'\r\n//         }\r\n//       ]\r\n//     },\r\n//     filler: {\r\n//       propagate: false\r\n//     },\r\n//     'samples-filler-analyser': {\r\n//       target: 'chart-analyser'\r\n//     },\r\n//     tooltip: {\r\n//       callbacks: {\r\n//           footer: function(tooltipItems) {\r\n//             let sum = 0;\r\n\r\n//             tooltipItems.forEach(function(tooltipItem) {\r\n//               sum += tooltipItem.parsed.y;\r\n//             });\r\n//             return 'Sum: ' + sum;\r\n//           }\r\n//       }\r\n//   }\r\n//   },\r\n// };\r\n\r\nfunction VerticalBar(props) {\r\n\r\n  return (\r\n    <Bar data={props.data} options={props.options} />\r\n  )\r\n};\r\n\r\nexport default VerticalBar;","const db = {\r\n    purchase: [\r\n        {\r\n            managerName: 'Менеджер 1',\r\n            purchases: [\r\n                {\r\n                    date: '01.10.21',\r\n                    weight: 120,\r\n                    product: 'Товар 1',\r\n                    price: 1650,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '02.10.21',\r\n                    weight: 100,\r\n                    product: 'Товар 2',\r\n                    price: 1700,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '03.10.21',\r\n                    weight: 80,\r\n                    product: 'Товар 1',\r\n                    price: 1730,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '04.10.21',\r\n                    weight: 110,\r\n                    product: 'Товар 1',\r\n                    price: 1750,\r\n                    yAxisID: 'LME'\r\n                },                 {\r\n                    date: '05.10.21',\r\n                    weight: 50,\r\n                    product: 'Товар 3',\r\n                    price: 1800,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '06.10.21',\r\n                    weight: 70,\r\n                    product: 'Товар 1',\r\n                    price: 1765,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '06.10.21',\r\n                    weight: 25,\r\n                    product: 'Товар 1',\r\n                    price: 1730,\r\n                    yAxisID: 'LME'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            managerName: 'Менеджер 2',\r\n            purchases: [\r\n                {\r\n                    date: '01.10.21',\r\n                    weight: 100,\r\n                    product: 'Товар 1',\r\n                    price: 1720,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '02.10.21',\r\n                    weight: 50,\r\n                    product: 'Товар 2',\r\n                    price: 1750,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '03.10.21',\r\n                    weight: 40,\r\n                    product: 'Товар 1',\r\n                    price: 1800,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '04.10.21',\r\n                    weight: 55,\r\n                    product: 'Товар 1',\r\n                    price: 1770,\r\n                    yAxisID: 'LME'\r\n                },                 {\r\n                    date: '05.10.21',\r\n                    weight: 60,\r\n                    product: 'Товар 3',\r\n                    price: 1750,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '06.10.21',\r\n                    weight: 35,\r\n                    product: 'Товар 1',\r\n                    price: 1715,\r\n                    yAxisID: 'LME'\r\n                },\r\n                {\r\n                    date: '05.10.21',\r\n                    weight: 35,\r\n                    product: 'Товар 1',\r\n                    price: 1710,\r\n                    yAxisID: 'LME'\r\n                },\r\n            ]\r\n        }\r\n    ],\r\n    lmeOfficial: [\r\n        {\r\n            date: '01.10.21',\r\n            price: 1750,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '02.10.21',\r\n            price: 1650,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '03.10.21',\r\n            price: 1750,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '04.10.21',\r\n            price: 1800,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '05.10.21',\r\n            price: 1730,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '06.10.21',\r\n            price: 1690,\r\n            yAxisID: 'LME'\r\n        }\r\n    ],\r\n    lmeBidding: [\r\n        {\r\n            date: '01.10.21',\r\n            price: 1680,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '02.10.21',\r\n            price: 1730,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '03.10.21',\r\n            price: 1800,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '04.10.21',\r\n            price: 1745,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '05.10.21',\r\n            price: 1770,\r\n            yAxisID: 'LME'\r\n        },\r\n        {\r\n            date: '06.10.21',\r\n            price: 1790,\r\n            yAxisID: 'LME'\r\n        }\r\n    ],\r\n    usdBidding: [\r\n        {\r\n            date: '01.10.21',\r\n            price: 71,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '02.10.21',\r\n            price: 73,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '03.10.21',\r\n            price: 72,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '04.10.21',\r\n            price: 71,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '05.10.21',\r\n            price: 75,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '06.10.21',\r\n            price: 77,\r\n            yAxisID: 'USD'\r\n        }\r\n    ],\r\n    usdOfficial: [\r\n        {\r\n            date: '01.10.21',\r\n            price: 72,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '02.10.21',\r\n            price: 74,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '03.10.21',\r\n            price: 71,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '04.10.21',\r\n            price: 73,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '05.10.21',\r\n            price: 71,\r\n            yAxisID: 'USD'\r\n        },\r\n        {\r\n            date: '06.10.21',\r\n            price: 72,\r\n            yAxisID: 'USD'\r\n        }\r\n    ],\r\n    lmeCalendar: [\r\n        {\r\n            date: '01.10.21',\r\n            work: true,\r\n            trend: 'grow',\r\n            news: 'Новость приведет к росту'\r\n        },\r\n        {\r\n            date: '02.10.21',\r\n            work: true,\r\n            trend: 'no',\r\n            news: 'Нет новостей'\r\n        },\r\n        {\r\n            date: '03.10.21',\r\n            work: true,\r\n            trend: 'no',\r\n            news: 'Нет новостей'\r\n        },\r\n        {\r\n            date: '04.10.21',\r\n            work: true,\r\n            trend: 'fall',\r\n            news: 'Новость приведет к падению'\r\n        },\r\n        {\r\n            date: '05.10.21',\r\n            work: false,\r\n            trend: 'fall',\r\n            news: 'Новость приведет к падению'\r\n        },\r\n        {\r\n            date: '06.10.21',\r\n            work: true,\r\n            trend: 'no',\r\n            news: 'Нет новостей'\r\n        }\r\n    ]\r\n}\r\n\r\nexport default db;","import React, { useState } from 'react';\r\nimport Bar from './Bar';\r\nimport db from '../database/db';\r\n\r\nfunction BarConfigurator() {\r\n\r\n    // const [phone, setPhone] = useState('');\r\n    // const [address, setAddress] = useState('');\r\n    // const [agreement, setAgreement] = useState(false);\r\n\r\n    const labels = [];\r\n\r\n    for (let item of db.lmeCalendar) {\r\n        labels.push(item.date);\r\n    }\r\n\r\n    const yAxesArr = [];\r\n\r\n    const addNewAxisY = (newAxis) => {\r\n        const indexOfAxis = yAxesArr.findIndex(object => object.yAxisName === newAxis.yAxisName && object.variable === newAxis.variable);\r\n        if (indexOfAxis === -1) {\r\n            yAxesArr.push(newAxis);\r\n        }\r\n        // console.log(yAxesArr);\r\n    }\r\n\r\n    const deleteAxisY = (newAxis) => {\r\n        const indexOfAxis = yAxesArr.findIndex(object => object.yAxisName === newAxis.yAxisName && object.variable === newAxis.variable);\r\n        yAxesArr.splice (indexOfAxis, 1);\r\n        // console.log(yAxesArr);\r\n    }\r\n\r\n    const datasets = [];\r\n\r\n    const handleCheckBoxClick = (event) => {\r\n        if (event.target.id === 'purchase') {\r\n          if (event.target.checked) {\r\n            addNewAxisY({ yAxisName: 'lme', variable: 'purchase'});\r\n          } else {\r\n            deleteAxisY({ yAxisName: 'lme', variable: 'purchase'});\r\n          }\r\n        } else if (event.target.id === 'lme_official') {\r\n          if (event.target.checked) {\r\n            addNewAxisY({ yAxisName: 'lme', variable: 'lme_official'});\r\n          } else {\r\n            deleteAxisY({ yAxisName: 'lme', variable: 'lme_official'});\r\n          }\r\n        } else if (event.target.id === 'lme_bidding') {\r\n          if (event.target.checked) {\r\n            addNewAxisY({ yAxisName: 'lme', variable: 'lme_bidding'});\r\n          } else {\r\n            deleteAxisY({ yAxisName: 'lme', variable: 'lme_bidding'});\r\n          }\r\n        } else if (event.target.id === 'usd_bidding') {\r\n          if (event.target.checked) {\r\n            addNewAxisY({ yAxisName: 'usd', variable: 'usd_bidding'});\r\n          } else {\r\n            deleteAxisY({ yAxisName: 'usd', variable: 'usd_bidding'});\r\n          }\r\n        } else if (event.target.id === 'usd_official') {\r\n          if (event.target.checked) {\r\n            addNewAxisY({ yAxisName: 'usd', variable: 'usd_official'});\r\n          } else {\r\n            deleteAxisY({ yAxisName: 'usd', variable: 'usd_official'});\r\n          }\r\n        }\r\n        console.log(event.target.id);\r\n        console.log(event.target.checked);\r\n        console.log('yAxesArr');\r\n        console.log(yAxesArr);\r\n    }\r\n\r\n    const annotations = [];\r\n\r\n    const calculateAnnotations = () => {\r\n        for (let i = 0; i < db.lmeCalendar.length; i += 1) {\r\n            const newAnnotation = {\r\n                type: 'box',\r\n                xScaleID: 'x1',\r\n                yScaleID: 'y',\r\n                yMin: 0,\r\n                yMax: 20000,\r\n                xMin: i -0.5,\r\n                xMax: i + 0.5,\r\n                borderWidth: 1\r\n            };\r\n            if (db.lmeCalendar[i].work) {\r\n                newAnnotation.borderColor = 'green';\r\n            } else {\r\n                newAnnotation.borderColor = 'black';\r\n            }\r\n            if (db.lmeCalendar[i].trend === 'grow') {\r\n                newAnnotation.backgroundColor = 'rgba(42, 187, 155, 0.05)'\r\n            } else if (db.lmeCalendar[i].trend === 'fall') {\r\n                newAnnotation.backgroundColor = 'rgba(255, 0, 0, 0.05)'\r\n            } else if (db.lmeCalendar[i].trend === 'no') {\r\n                newAnnotation.backgroundColor = 'rgba(255, 255, 255, 0.05)'\r\n            }\r\n            annotations.push(newAnnotation);\r\n        }\r\n    }\r\n\r\n    calculateAnnotations();\r\n    // console.log(annotations);\r\n\r\n    const handleDrawClick = () => {\r\n      const yAxes = [];\r\n      for (let i = 0; i < yAxesArr.length; i += 1) {\r\n        const indexOfAxis = yAxes.findIndex(object => object.name === yAxesArr[i].yAxisName);\r\n        if (indexOfAxis === -1) {\r\n          const lengthOfAxes = yAxes.length;\r\n          const newAxis = {\r\n            name: yAxesArr[i].yAxisName,\r\n            axisNumber: lengthOfAxes === 0 ? `y` : `y${lengthOfAxes}`\r\n          };\r\n          yAxes.push(newAxis);\r\n        }\r\n      }\r\n      \r\n\r\n      console.log('datasets');\r\n      console.log(datasets);\r\n    }\r\n\r\n    const data = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'LME официальный курс',\r\n            data: [1750, 1859, 1695, 1820, 1699, 1800],\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(132, 155, 123, 0.3)',\r\n            type: 'line',\r\n            order: 1,\r\n            yAxisID: 'y2'\r\n          }, {\r\n            label: 'LME торги',\r\n            data: [1700, 1800, 1650, 1790, 1650, 1720],\r\n            backgroundColor: 'rgba(25, 155, 6, 0.3)',\r\n            borderColor: 'blue',\r\n            type: 'line',\r\n            order: 1,\r\n            yAxisID: 'y2'\r\n          }, {\r\n            label: 'USD торги',\r\n            data: [71, 73, 79, 71, 72, 75],\r\n            backgroundColor: 'rgba(25, 155, 6, 0.3)',\r\n            borderColor: 'brown',\r\n            type: 'line',\r\n            order: 1,\r\n            yAxisID: 'y'\r\n          }, {\r\n            label: 'USD официальный',\r\n            data: [71, 73, 77, 71, 73, 77],\r\n            backgroundColor: 'rgba(25, 155, 6, 0.3)',\r\n            borderColor: 'yellow',\r\n            type: 'line',\r\n            order: 2,\r\n            yAxisID: 'y'\r\n          }, {\r\n            type: 'bubble',\r\n            label: 'Менеджер 1',\r\n            data: [{\r\n              x: 1,\r\n              y: 1700,\r\n              r: 17\r\n            },{\r\n              x: 2,\r\n              y: 1650,\r\n              r: 15\r\n            },{\r\n              x: 3,\r\n              y: 1700,\r\n              r: 15\r\n            },{\r\n              x: 4,\r\n              y: 1740,\r\n              r: 15\r\n            },{\r\n              x: 5,\r\n              y: 1650,\r\n              r: 15\r\n            },{\r\n              x: 6,\r\n              y: 1600,\r\n              r: 15\r\n            }],\r\n            borderColor: 'green',\r\n            backgroundColor: 'green',\r\n            order: 0,\r\n            yAxisID: 'y2'\r\n          },\r\n          {\r\n            type: 'bubble',\r\n            label: 'Менеджер 2',\r\n            data: [{\r\n              x: 1,\r\n              y: 1800,\r\n              r: 17\r\n            },{\r\n              x: 2,\r\n              y: 1720,\r\n              r: 15\r\n            },{\r\n              x: 3,\r\n              y: 1650,\r\n              r: 15\r\n            },{\r\n              x: 4,\r\n              y: 1700,\r\n              r: 15\r\n            },{\r\n              x: 5,\r\n              y: 1660,\r\n              r: 15\r\n            },{\r\n              x: 6,\r\n              y: 1700,\r\n              r: 15\r\n            },{\r\n              x: 6,\r\n              y: 1730,\r\n              r: 15\r\n            }],\r\n            borderColor: 'brown',\r\n            backgroundColor: 'brown',\r\n            order: 0,\r\n            yAxisID: 'y2'\r\n          },\r\n        ],\r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: 'USD'\r\n            },\r\n            position: 'right',\r\n            stacked: false,\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n            min: 60,\r\n            max: 100,\r\n          },\r\n          y2: {\r\n            title: {\r\n              display: true,\r\n              text: 'LME'\r\n            },\r\n            stacked: false,\r\n            ticks: {\r\n              beginAtZero: false\r\n            },\r\n            min: 1400,\r\n            max: 2100\r\n          },\r\n          x1: {\r\n            title: {\r\n              display: true,\r\n              text: 'Дата'\r\n            },\r\n          }\r\n        },\r\n        plugins: {\r\n          annotation: {\r\n            annotations: annotations\r\n          },\r\n          filler: {\r\n            propagate: false\r\n          },\r\n          'samples-filler-analyser': {\r\n            target: 'chart-analyser'\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n                footer: function(tooltipItems) {\r\n                  let output = 'no';\r\n                  tooltipItems.forEach(function(tooltipItem) {\r\n                    // console.log(tooltipItem);\r\n                    if (tooltipItem.dataset.type === 'bubble') {\r\n                      output = `Закуплено ${tooltipItem.raw.r} т меди по цене ${tooltipItem.parsed.y} $`;\r\n                    }\r\n                  });\r\n                  return output === 'no' ? '' : output;\r\n                }\r\n            }\r\n        }\r\n        },\r\n      };\r\n\r\n\r\n    return (\r\n        <div className=\"bar_wrapper\">\r\n            {/* <h1>Конфигуратор графика</h1>\r\n            <div className=\"config_wrapper\">\r\n                <div className=\"config_row\">\r\n                    <input type=\"checkbox\" id=\"purchase\" name=\"purchase\" onClick={(evt) => handleCheckBoxClick(evt)} />\r\n                    <label htmlFor=\"purchase\">Закупка менеджеров</label>\r\n                </div>\r\n                <div className=\"config_row\">\r\n                    <input type=\"checkbox\" id=\"lme_official\" name=\"lme_official\" onClick={(evt) => handleCheckBoxClick(evt)} />\r\n                    <label htmlFor=\"purchase\">Официальный курс LME</label>\r\n                </div>\r\n                <div className=\"config_row\">\r\n                    <input type=\"checkbox\" id=\"lme_bidding\" name=\"lme_bidding\" onClick={(evt) => handleCheckBoxClick(evt)} />\r\n                    <label htmlFor=\"purchase\">Курс торгующийся на LME</label>\r\n                </div>\r\n                <div className=\"config_row\">\r\n                    <input type=\"checkbox\" id=\"usd_official\" name=\"usd_official\" onClick={(evt) => handleCheckBoxClick(evt)} />\r\n                    <label htmlFor=\"purchase\">Официальный курс USD</label>\r\n                </div>\r\n                <div className=\"config_row\">\r\n                    <input type=\"checkbox\" id=\"usd_bidding\" name=\"usd_bidding\" onClick={(evt) => handleCheckBoxClick(evt)} />\r\n                    <label htmlFor=\"purchase\">Торгующийся курс USD</label>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" onClick={handleDrawClick}>Сформировать график</button> */}\r\n            <div className=\"bar_wrapper\">\r\n                <Bar data={data} options={options}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BarConfigurator;\r\n\r\n\r\n\r\n","import './App.css';\nimport BarConfigurator from './components/BarConfigurator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BarConfigurator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}